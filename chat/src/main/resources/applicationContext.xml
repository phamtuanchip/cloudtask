<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
			http://www.springframework.org/schema/data/mongo
          	http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
			 http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">
			
	<context:annotation-config />
	<context:component-scan base-package="com.cloud.admin.security" />
	<context:component-scan base-package="com.cloud.config" />
	<context:component-scan base-package="com.cloud.schedule" />
	<mongo:mongo host="127.0.0.1" port="27017" />
	<mongo:db-factory dbname="yourdb" />
	<!--
		DATABASE SETUP 
	 -->

	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="username" value="root" />
		<property name="password" value="t123456" />
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/mobilecheckin" />
	</bean>
	
	<bean id="userDAO" class="com.cloud.admin.dao.UserDAOImpl" />	
	<bean id="passengerDAO" class="com.cloud.admin.dao.PassengerDAOImpl" />
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>	
	
	
	<!--
		INIT REST COMPONENTS 
	 -->
		
<!-- 	<bean id="objectMapper" class="org.codehaus.jackson.map.ObjectMapper" /> -->
	
	<!-- 
		SPRING SECURITY SETUP
	-->
	
<!-- 	<bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder"> -->
<!-- 		<constructor-arg value="ThisIsASecretSoChangeMe" /> -->
<!-- 	</bean> -->
	
	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider user-service-ref="userDetailsService">
<!-- 			<security:password-encoder ref="passwordEncoder"></security:password-encoder> -->
		</security:authentication-provider>
	</security:authentication-manager>

	<security:http
			realm="Protected API"
			use-expressions="true"
			auto-config="false"
			create-session="stateless"
			entry-point-ref="unauthorizedEntryPoint"
			authentication-manager-ref="authenticationManager">
			
		<security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
		<security:intercept-url pattern="/rest/user/authenticate" access="permitAll" />
		
		<security:intercept-url method="GET" pattern="/rest/**" access="hasAnyRole('ROLE_AGENT','ROLE_SUPERVISOR')" />
		<security:intercept-url method="PUT" pattern="/rest/**" access="hasRole('ROLE_SUPERVISOR')" />
		<security:intercept-url method="POST" pattern="/rest/passenger/**" access="hasAnyRole('ROLE_AGENT','ROLE_SUPERVISOR')" />
		<security:intercept-url method="DELETE" pattern="/rest/**" access="hasRole('ROLE_SUPERVISOR')" />
		<security:intercept-url method="POST" pattern="/rest/**" access="hasAnyRole('ROLE_AGENT','ROLE_SUPERVISOR')" />
		
		
	</security:http>

	<bean id="unauthorizedEntryPoint" class="com.cloud.admin.security.UnauthorizedEntryPoint" />
	
	<bean id="userDetailsService" class="com.cloud.admin.service.MyUserDetailsService" />
		
	<bean class="com.cloud.admin.security.AuthenticationTokenProcessingFilter" id="authenticationTokenProcessingFilter">
		<constructor-arg ref="userDAO" />
	</bean>
	
	<context:component-scan base-package="com.cloud.admin.controller" />

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/pages/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
	</bean>
	
	<bean id="taskService" class="com.cloud.service.impl.TaskServiceMongoImpl">
		<property name="mongoTemplate" ref="mongoTemplate"></property>
	</bean>
	<bean id="taskServiceF"
		class="com.cloud.service.impl.TaskServiceFactoryLoader">
		<property name="taskService" ref="taskService"></property>
	</bean>
	<bean id="bayeuxServer" class="org.cometd.server.BayeuxServerImpl" init-method="start" destroy-method="stop">
        <property name="options">
            <map>
                <entry key="timeout" value="15000" />
            </map>
        </property>
    </bean>
	<bean id="runMeTask" class="com.cloud.schedule.RunMeTask">
		<property name="taskServiceF" ref="taskServiceF"></property>
	</bean>
	<!-- Spring Quartz -->
	<bean name="runMeJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		
		<property name="jobClass" value="com.cloud.schedule.RunMeJob" />
		<property name="durability" value="true"/>
		<property name="jobDataAsMap">
			<map>
				<entry key="runMeTask" value-ref="runMeTask" />
			</map>
		</property>

	</bean>

	<!-- <bean id="runMeJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"> 
		<property name="targetObject" ref="runMeTask" /> <property name="targetMethod" 
		value="printMe" /> </bean> -->

	<!-- Simple Trigger, run every 5 seconds -->
	<bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">

		<property name="jobDetail" ref="runMeJob" />
		<property name="repeatInterval" value="5000" />
		<property name="startDelay" value="1000" />

	</bean>

	<!-- Cron Trigger, run every 5 seconds -->
	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">

		<property name="jobDetail" ref="runMeJob" />
		<property name="cronExpression" value="0/5 * * * * ?" />

	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="jobDetails">
			<list>
				<ref bean="runMeJob" />
			</list>
		</property>

		<property name="triggers">
			<list>
				<ref bean="simpleTrigger" />
			</list>
		</property>
	</bean>
	

</beans>