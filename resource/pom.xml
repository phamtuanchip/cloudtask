<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.cloud.smart</groupId>
		<artifactId>cloudsmart</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<artifactId>cloudsmart-res</artifactId>
	<packaging>war</packaging>
 
	 




	<dependencies>
		<dependency>
			<groupId>org.cloud.smart</groupId>
			<artifactId>cloudsmart-co</artifactId>
			<version>${cloud.smart.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec</groupId>
			<artifactId>jboss-javaee-6.0</artifactId>
			<version>1.0.0.Final</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>


		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-spring3</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>

		</dependency>


		<!-- QuartzJobBean in spring-context-support.jar -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Spring + Quartz need transaction -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Quartz framework -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>${org.quartz.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.3</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
		</dependency>
		<dependency>
			<groupId>com.thetransactioncompany</groupId>
			<artifactId>cors-filter</artifactId>
			<version>1.3.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql-jdbc.version}</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.14</version>
		</dependency>
		
		<!-- mongodb java driver -->
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>2.11.0</version>
		</dependency>
		
		<!-- Spring data mongodb -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-mongodb</artifactId>
			<version>1.2.0.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2.2</version>
		</dependency>

		<!-- Import the CDI API, we use provided scope as the API is included in 
			JBoss EAP 6 -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the Common Annotations API (JSR-250), we use provided scope 
			as the API is included in JBoss EAP 6 -->
		<dependency>
			<groupId>org.jboss.spec.javax.annotation</groupId>
			<artifactId>jboss-annotations-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JAX-RS API, we use provided scope as the API is included 
			in JBoss EAP 6. -->
		<dependency>
			<groupId>org.jboss.spec.javax.ws.rs</groupId>
			<artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<!-- Spring social -->
		 <dependency>
			<groupId>org.springframework.social</groupId>
			<artifactId>spring-social-core</artifactId>
			<version>1.1.0.RELEASE</version>
		</dependency>
		<dependency>
		  <groupId>org.springframework.social</groupId>
		  <artifactId>spring-social-web</artifactId>
		  <version>1.1.0.RELEASE</version>
		</dependency>
		<!-- Spring facebook -->
		<dependency>
		  <groupId>org.springframework.social</groupId>
		  <artifactId>spring-social-facebook</artifactId>
		  <version>1.1.0.RELEASE</version>
		</dependency>	
		<!-- Spring twitter -->
		<dependency>
		  <groupId>org.springframework.social</groupId>
		  <artifactId>spring-social-twitter</artifactId>
		  <version>1.1.0.RELEASE</version>
		</dependency>	
		
		<!-- Spring linkedin -->
		<dependency>
		  <groupId>org.springframework.social</groupId>
		  <artifactId>spring-social-linkedin</artifactId>
		  <version>1.0.0.RELEASE</version>
		</dependency>	
		<!-- Spring tripit -->
<!-- 		<dependency> -->
<!-- 		  <groupId>org.springframework.social</groupId> -->
<!-- 		  <artifactId>spring-social-tripit</artifactId> -->
<!-- 		  <version>1.1.0.RELEASE</version> -->
<!-- 		</dependency> -->
		<!-- Spring github -->
<!-- 		<dependency> -->
<!-- 		  <groupId>org.springframework.social</groupId> -->
<!-- 		  <artifactId>spring-social-github</artifactId> -->
<!-- 		  <version>1.1.0.RELEASE</version> -->
<!-- 		</dependency> -->
		
    
	</dependencies>
	<profiles>
		<profile>
			<!-- When built in OpenShift the 'openshift' profile will be used when 
				invoking mvn. -->
			<!-- Use this profile for any OpenShift specific customization your app 
				will need. -->
			<!-- By default that is to put the resulting archive into the 'deployments' 
				folder. -->
			<!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
			<id>openshift</id>
			<build>
				<finalName>resource</finalName>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.1.1</version>
						<configuration>
							<outputDirectory>deployments</outputDirectory>
							<warName>resource</warName>
						</configuration>
					</plugin>
					<!-- <plugin> -->
					<!-- <artifactId>maven-war-plugin</artifactId> -->
					<!-- <version>${version.war.plugin}</version> -->
					<!-- <configuration> -->
					<!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
					<!-- <failOnMissingWebXml>false</failOnMissingWebXml> -->
					<!-- </configuration> -->
					<!-- </plugin> -->
					<plugin>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<source>1.6</source>
							<target>1.6</target>
						</configuration>
					</plugin>
					<!-- JBoss AS plugin to deploy war -->
					<plugin>
						<groupId>org.jboss.as.plugins</groupId>
						<artifactId>jboss-as-maven-plugin</artifactId>
						<version>${version.jboss.maven.plugin}</version>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
